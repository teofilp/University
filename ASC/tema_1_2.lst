     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 05                          a db 5
    14 00000001 02                          b db 2
    15 00000002 03                          c db 3
    16 00000003 01                          d db 1
    17 00000004 <res 00000001>              res resb 1
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                  ; (a+a-c) - (b+b+b+d)
    22                                      start:
    23 00000000 A0[00000000]                    mov al, [a] ; al <- a
    24 00000005 0205[00000000]                  add al, [a] ; al <- al + a <=> al <= a + a
    25 0000000B 2A05[02000000]                  sub al, [c] ; al <- al - c <=> al <= a + a - c
    26                                          
    27 00000011 8A1D[01000000]                  mov bl, [b] ; bl <- b
    28 00000017 021D[01000000]                  add bl, [b] ; bl <- bl + b <=> bl <- b + b
    29 0000001D 021D[01000000]                  add bl, [b] ; bl <- bl + b <=> bl <- b + b + b
    30 00000023 021D[03000000]                  add bl, [d] ; bl <- bl + d <=> bl <- b + b + b + d
    31                                          
    32 00000029 28D8                            sub al, bl
    33 0000002B A2[04000000]                    mov [res], al
    34                                          
    35 00000030 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000032 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
